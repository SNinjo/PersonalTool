{"version":3,"file":"component---src-pages-text-editor-index-tsx-1c07589b199b791b27a8.js","mappings":"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","sources":["webpack://SNinjo Tool/./src/components/TextEditor/index.tsx","webpack://SNinjo Tool/./src/components/TextEditor/index.module.scss","webpack://SNinjo Tool/./src/pages/TextEditor/index.tsx","webpack://SNinjo Tool/./src/pages/TextEditor/index.module.scss"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nfunction getConsecutiveInteger(min: number, max: number) {\r\n\treturn [...Array(max - min + 1).keys()].map(integer => (integer + min));\r\n}\r\n\r\ntype DataProps = {\r\n\ttext?: string,\r\n\t\r\n\tonInput?: (text: string) => void,\r\n\tonChange?: (text: string) => void,\r\n}\r\nconst TextEditor: FC<DataProps> = ({ text, onInput, onChange }) => {\r\n\tconst refTextarea = useRef<HTMLTextAreaElement>(null);\r\n\tconst updateText = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tif (onInput) onInput(textareaElement.value);\r\n\t\tif (onChange) onChange(textareaElement.value);\r\n\t}\r\n\r\n\tconst [lineOfCaret, setLineOfCaret] = useState(0);\r\n\tconst updateLineOfCaret = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tconst lineOfCaret = textareaElement.value.substring(0, textareaElement.selectionStart).split(\"\\n\").length;\r\n\t\tsetLineOfCaret(lineOfCaret);\r\n\t}\r\n\r\n\tconst [lineCount, setLineCount] = useState(1);\r\n\tconst updateLineCount = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tconst lineCount = textareaElement.value.split(\"\\n\").length;\r\n\t\tsetLineCount(lineCount);\r\n\t}\r\n\r\n\tconst refBackground = useRef<HTMLDivElement>(null);\r\n\tconst [scrollTop, setScrollTop] = useState(0);\r\n\tconst updateScrollTop = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tsetScrollTop(textareaElement.scrollTop);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\trefBackground.current!.scrollTop = scrollTop;\r\n\t}, [scrollTop]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refTextarea.current) {\r\n\t\t\t// allow scripts to update textarea\r\n\t\t\tconst update = () => {\r\n\t\t\t\tupdateText();\r\n\t\t\t\tupdateLineCount();\r\n\t\t\t\tupdateScrollTop();\r\n\t\t\t}\r\n\t\t\trefTextarea.current.addEventListener('focus', update);\r\n\t\t\treturn () => refTextarea.current?.removeEventListener('focus', update);\r\n\t\t}\r\n\t}, [refTextarea]);\r\n\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={style.div}\r\n\t\t>\r\n\t\t\t<textarea\r\n\t\t\t\tref={refTextarea}\r\n\t\t\t\tdefaultValue={text ?? ''}\r\n\t\t\t\tspellCheck={false}\r\n\r\n\t\t\t\tonInput={(event) => {\r\n\t\t\t\t\tif (onInput) onInput((event.target as HTMLTextAreaElement).value);\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tif (onChange) onChange((event.target as HTMLTextAreaElement).value);\r\n\t\t\t\t}}\r\n\r\n\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\tswitch (event.key) {\r\n\t\t\t\t\t\tcase 'y':\r\n\t\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\tcase 'Enter':\r\n\t\t\t\t\t\tcase 'Backspace':\r\n\t\t\t\t\t\tcase 'Delete':\r\n\t\t\t\t\t\t\tupdateLineCount();\r\n\t\t\t\t\t\tcase 'ArrowLeft':\r\n\t\t\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\t\tcase 'ArrowUp':\r\n\t\t\t\t\t\tcase 'ArrowDown':\r\n\t\t\t\t\t\t\tupdateLineOfCaret();\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Tab':\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tdocument.execCommand(\"insertText\", false, \"\\t\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonKeyUp={(event) => {\r\n\t\t\t\t\tswitch (event.key) {\r\n\t\t\t\t\t\tcase 'y':\r\n\t\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\tcase 'Enter':\r\n\t\t\t\t\t\tcase 'Backspace':\r\n\t\t\t\t\t\tcase 'Delete':\r\n\t\t\t\t\t\t\tupdateLineCount();\r\n\t\t\t\t\t\tcase 'ArrowLeft':\r\n\t\t\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\t\tcase 'ArrowUp':\r\n\t\t\t\t\t\tcase 'ArrowDown':\r\n\t\t\t\t\t\t\tupdateLineOfCaret();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonMouseUp={() => updateLineOfCaret()}\r\n\t\t\t\tonBlur={() => setLineOfCaret(0)}\r\n\r\n\t\t\t\tonScroll={() => updateScrollTop()}\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tref={refBackground}\r\n\t\t\t\tclassName={style.background}\r\n\r\n\t\t\t\tonMouseDown={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\trefTextarea.current!.focus();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{getConsecutiveInteger(1, lineCount).map(lineNumber => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={`Line${lineNumber}`}\r\n\t\t\t\t\t\tclassName={`${style.line} ${(lineNumber === lineOfCaret)? style.selected : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.lineNumber}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{lineNumber}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.lineText}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default TextEditor;","// extracted by mini-css-extract-plugin\nexport var background = \"index-module--background--43130\";\nexport var div = \"index-module--div--0dc4b\";\nexport var line = \"index-module--line--60a9f\";\nexport var lineNumber = \"index-module--lineNumber--ba566\";\nexport var lineText = \"index-module--lineText--b28d7\";\nexport var selected = \"index-module--selected--8cb35\";","import React, { FC, useState } from 'react';\r\nimport { PageProps } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport TextEditorComponent from '../../components/TextEditor';\r\nimport Layout from '../../components/Layout';\r\nimport SEO from '../../components/SEO';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst TextEditor = () => {\r\n\tconst [text, setText] = useState('');\r\n\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<TextEditorComponent\r\n\t\t\t\t\ttext={text}\r\n\r\n\t\t\t\t\tonChange={setText}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={style.toolbar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(text)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StaticImage\r\n\t\t\t\t\t\t\tclassName={style.image}\r\n\t\t\t\t\t\t\tsrc='../../images/copy.png'\r\n\t\t\t\t\t\t\talt='copy image'\r\n\t\t\t\t\t\t\ttitle='copy image'\r\n\t\t\t\t\t\t\tloading='eager'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nexport default TextEditor;\r\n\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n\t<SEO\r\n\t\ttitle='Text Editor'\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)","// extracted by mini-css-extract-plugin\nexport var Link = \"index-module--Link--a772f\";\nexport var div = \"index-module--div--51a25\";\nexport var image = \"index-module--image--994d8\";\nexport var toolbar = \"index-module--toolbar--5de09\";"],"names":["_ref","text","onInput","onChange","refTextarea","useRef","lineOfCaret","setLineOfCaret","useState","updateLineOfCaret","textareaElement","current","value","substring","selectionStart","split","length","lineCount","setLineCount","updateLineCount","refBackground","scrollTop","setScrollTop","updateScrollTop","useEffect","update","updateText","addEventListener","_refTextarea$current","removeEventListener","React","className","ref","defaultValue","spellCheck","event","target","onKeyDown","key","preventDefault","document","execCommand","onKeyUp","onMouseUp","onBlur","onScroll","onMouseDown","focus","min","max","_toConsumableArray","Array","keys","map","integer","lineNumber","style","setText","Layout","TextEditorComponent","onClick","navigator","clipboard","writeText","StaticImage","src","alt","title","loading","__imageData","Head","location","SEO","pathname"],"sourceRoot":""}