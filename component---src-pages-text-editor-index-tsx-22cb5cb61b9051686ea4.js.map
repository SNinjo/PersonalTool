{"version":3,"file":"component---src-pages-text-editor-index-tsx-22cb5cb61b9051686ea4.js","mappings":"wNASA,SAASA,EAAgBC,EAAcC,GACtC,OAAOD,EAAKE,UAAU,EAAGD,GAAOE,MAAM,MAAMC,MAC7C,CAuHA,MA9GkCC,IAAkC,IAAjC,KAAEL,EAAI,QAAEM,EAAO,SAAEC,GAAU,EAC7D,MAAMC,GAAcC,EAAAA,EAAAA,QAA4B,OAO1C,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAoB,KACzB,MAAMC,EAAkBN,EAAYO,QAChChB,EAAgBe,EAAgBE,MAAOF,EAAgBG,kBAAoBlB,EAAgBe,EAAgBE,MAAOF,EAAgBI,cACrIP,EAAeZ,EAAgBe,EAAgBE,MAAOF,EAAgBG,iBAEtEN,EAAe,EAChB,GAGK,EAACQ,EAAU,EAACC,IAAgBR,EAAAA,EAAAA,UAAS,GACrCS,EAAkB,KACvB,MACMF,EADkBX,EAAYO,QACFC,MAAMb,MAAM,MAAMC,OACpDgB,EAAaD,EAAU,EAGlBG,GAAgBb,EAAAA,EAAAA,QAAuB,OACvC,EAACc,EAAU,EAACC,IAAgBZ,EAAAA,EAAAA,UAAS,GACrCa,EAAkB,KACvB,MAAMX,EAAkBN,EAAYO,QACpCS,EAAaV,EAAgBS,UAAU,EAqBxC,OAnBAG,EAAAA,EAAAA,YAAU,KACTJ,EAAcP,QAASQ,UAAYA,CAAS,GAC1C,CAACA,KAEJG,EAAAA,EAAAA,YAAU,KACT,GAAIlB,EAAYO,QAAS,CACxB,MAAMY,EAAS,KAnCE,MAClB,MAAMb,EAAkBN,EAAYO,QAChCT,GAASA,EAAQQ,EAAgBE,OACjCT,GAAUA,EAASO,EAAgBE,MAAM,EAiC3CY,GACAP,IACAI,GAAiB,EAGlB,OADAjB,EAAYO,QAAQc,iBAAiB,kBAAmBF,GACjD,KAAO,IAAD,EACO,QAAnB,EAAAnB,EAAYO,eAAO,OAAnBe,EAAqBC,oBAAoB,kBAAmBJ,EAAO,CAErE,IACE,CAACnB,IAIHwB,EAAAA,cAAAA,MAAAA,CACCC,UCtEc,4BDwEdD,EAAAA,cAAAA,WAAAA,CACCE,IAAK1B,EACL2B,aAAcnC,QAAAA,EAAQ,GACtBoC,YAAY,EAEZ9B,QAAU+B,IACL/B,GAASA,EAAS+B,EAAMC,OAA+BtB,OAE3DK,IACAR,GAAmB,EAEpBN,SAAW8B,IACN9B,GAAUA,EAAU8B,EAAMC,OAA+BtB,MAAM,EAGpEuB,UAAYF,IACO,QAAdA,EAAMG,MACTH,EAAMI,iBACNC,SAASC,YAAY,cAAc,EAAO,MAC3C,EAGDC,UAAW,IAAM/B,IACjBgC,SAAU,IAAMhC,IAChBiC,SAAU,IAAMrB,IAChBsB,OAAQ,IAAMpC,EAAe,KAG9BqB,EAAAA,cAAAA,MAAAA,CACCE,IAAKZ,EACLW,UCvGoB,kCDyGpBe,YAAcX,IACbA,EAAMI,iBACNjC,EAAYO,QAASkC,OAAO,IAvGFC,EA0GJ,EA1GiBC,EA0GdhC,GAzGtBiC,EAAAA,EAAAA,GAAIC,MAAMF,EAAMD,EAAM,GAAGI,QAAQC,KAAIC,GAAYA,EAAUN,KAyG1BK,KAAIE,GACxCzB,EAAAA,cAAAA,MAAAA,CACCQ,IAAG,OAASiB,EACZxB,UAAcyB,8BAAeD,IAAe/C,EC5G5B,gCD4G2D,KAE3EsB,EAAAA,cAAAA,MAAAA,CACCC,UCjHiB,mCDmHhBwB,GAEFzB,EAAAA,cAAAA,MAAAA,CACCC,UCrHe,uCDAtB,IAA+BiB,EAAaC,CA0HpC,E,oBEpFR,MAjCmB,KAClB,MAAM,EAACnD,EAAI,EAAE2D,IAAW/C,EAAAA,EAAAA,UAAS,IAGjC,OACCoB,EAAAA,cAAC4B,EAAAA,EAAM,KACN5B,EAAAA,cAAAA,MAAAA,CACCC,UCfa,4BDiBbD,EAAAA,cAAC6B,EAAmB,CACnB7D,KAAMA,EAENO,SAAUoD,IAEX3B,EAAAA,cAAAA,MAAAA,CACCC,UCrBgB,gCDuBhBD,EAAAA,cAAAA,SAAAA,CACC8B,QAAS,IAAMC,UAAUC,UAAUC,UAAUjE,IAE7CgC,EAAAA,cAACkC,EAAAA,EAAW,CACXjC,UC5BY,6BD6BZkC,IAAI,wBACJC,IAAI,aACJC,MAAM,aACNC,QAAQ,QAAOC,YAAAA,EAAAA,WAKX,EAMJ,MAAMC,EAAsBnE,IAAA,IAAC,SAAEoE,GAAU,SAC/CzC,EAAAA,cAAC0C,EAAAA,EAAG,CACHL,MAAM,cACNM,SAAUF,EAASE,UAClB,C","sources":["webpack://SNinjo Tool/./src/components/TextEditor/index.tsx","webpack://SNinjo Tool/./src/components/TextEditor/index.module.scss","webpack://SNinjo Tool/./src/pages/TextEditor/index.tsx","webpack://SNinjo Tool/./src/pages/TextEditor/index.module.scss"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nfunction getConsecutiveInteger(min: number, max: number) {\r\n\treturn [...Array(max - min + 1).keys()].map(integer => (integer + min));\r\n}\r\n\r\nfunction getNumberOfLine(text: string, index: number): number {\r\n\treturn text.substring(0, index).split(\"\\n\").length;\r\n}\r\n\r\n\r\ntype DataProps = {\r\n\ttext?: string,\r\n\t\r\n\tonInput?: (text: string) => void,\r\n\tonChange?: (text: string) => void,\r\n}\r\nconst TextEditor: FC<DataProps> = ({ text, onInput, onChange }) => {\r\n\tconst refTextarea = useRef<HTMLTextAreaElement>(null);\r\n\tconst updateText = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tif (onInput) onInput(textareaElement.value);\r\n\t\tif (onChange) onChange(textareaElement.value);\r\n\t}\r\n\r\n\tconst [lineOfCaret, setLineOfCaret] = useState(0);\r\n\tconst updateLineOfCaret = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tif (getNumberOfLine(textareaElement.value, textareaElement.selectionStart) === getNumberOfLine(textareaElement.value, textareaElement.selectionEnd)) {\r\n\t\t\tsetLineOfCaret(getNumberOfLine(textareaElement.value, textareaElement.selectionStart));\r\n\t\t} else {\r\n\t\t\tsetLineOfCaret(0);\r\n\t\t}\r\n\t}\r\n\r\n\tconst [lineCount, setLineCount] = useState(1);\r\n\tconst updateLineCount = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tconst lineCount = textareaElement.value.split(\"\\n\").length;\r\n\t\tsetLineCount(lineCount);\r\n\t}\r\n\r\n\tconst refBackground = useRef<HTMLDivElement>(null);\r\n\tconst [scrollTop, setScrollTop] = useState(0);\r\n\tconst updateScrollTop = () => {\r\n\t\tconst textareaElement = refTextarea.current as HTMLTextAreaElement;\r\n\t\tsetScrollTop(textareaElement.scrollTop);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\trefBackground.current!.scrollTop = scrollTop;\r\n\t}, [scrollTop]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refTextarea.current) {\r\n\t\t\tconst update = () => {\r\n\t\t\t\tupdateText();\r\n\t\t\t\tupdateLineCount();\r\n\t\t\t\tupdateScrollTop();\r\n\t\t\t}\r\n\t\t\trefTextarea.current.addEventListener('changeViaScript', update);\r\n\t\t\treturn () => {\r\n\t\t\t\trefTextarea.current?.removeEventListener('changeViaScript', update);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [refTextarea]);\r\n\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={style.div}\r\n\t\t>\r\n\t\t\t<textarea\r\n\t\t\t\tref={refTextarea}\r\n\t\t\t\tdefaultValue={text ?? ''}\r\n\t\t\t\tspellCheck={false}\r\n\r\n\t\t\t\tonInput={(event) => {\r\n\t\t\t\t\tif (onInput) onInput((event.target as HTMLTextAreaElement).value);\r\n\r\n\t\t\t\t\tupdateLineCount();\r\n\t\t\t\t\tupdateLineOfCaret();\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tif (onChange) onChange((event.target as HTMLTextAreaElement).value);\r\n\t\t\t\t}}\r\n\r\n\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\tif (event.key === 'Tab') {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tdocument.execCommand(\"insertText\", false, \"\\t\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\r\n\t\t\t\tonMouseUp={() => updateLineOfCaret()}\r\n\t\t\t\tonSelect={() => updateLineOfCaret()}\r\n\t\t\t\tonScroll={() => updateScrollTop()}\r\n\t\t\t\tonBlur={() => setLineOfCaret(0)}\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tref={refBackground}\r\n\t\t\t\tclassName={style.background}\r\n\r\n\t\t\t\tonMouseDown={(event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\trefTextarea.current!.focus();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{getConsecutiveInteger(1, lineCount).map(lineNumber => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={`Line${lineNumber}`}\r\n\t\t\t\t\t\tclassName={`${style.line} ${(lineNumber === lineOfCaret)? style.selected : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.lineNumber}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{lineNumber}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.lineText}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default TextEditor;","// extracted by mini-css-extract-plugin\nexport var background = \"index-module--background--43130\";\nexport var div = \"index-module--div--0dc4b\";\nexport var line = \"index-module--line--60a9f\";\nexport var lineNumber = \"index-module--lineNumber--ba566\";\nexport var lineText = \"index-module--lineText--b28d7\";\nexport var selected = \"index-module--selected--8cb35\";","import React, { FC, useState } from 'react';\r\nimport { PageProps } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport TextEditorComponent from '../../components/TextEditor';\r\nimport Layout from '../../components/Layout';\r\nimport SEO from '../../components/SEO';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst TextEditor = () => {\r\n\tconst [text, setText] = useState('');\r\n\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<TextEditorComponent\r\n\t\t\t\t\ttext={text}\r\n\r\n\t\t\t\t\tonChange={setText}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={style.toolbar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(text)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StaticImage\r\n\t\t\t\t\t\t\tclassName={style.image}\r\n\t\t\t\t\t\t\tsrc='../../images/copy.png'\r\n\t\t\t\t\t\t\talt='copy image'\r\n\t\t\t\t\t\t\ttitle='copy image'\r\n\t\t\t\t\t\t\tloading='eager'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nexport default TextEditor;\r\n\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n\t<SEO\r\n\t\ttitle='Text Editor'\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)","// extracted by mini-css-extract-plugin\nexport var Link = \"index-module--Link--a772f\";\nexport var div = \"index-module--div--51a25\";\nexport var image = \"index-module--image--994d8\";\nexport var toolbar = \"index-module--toolbar--5de09\";"],"names":["getNumberOfLine","text","index","substring","split","length","_ref","onInput","onChange","refTextarea","useRef","lineOfCaret","setLineOfCaret","useState","updateLineOfCaret","textareaElement","current","value","selectionStart","selectionEnd","lineCount","setLineCount","updateLineCount","refBackground","scrollTop","setScrollTop","updateScrollTop","useEffect","update","updateText","addEventListener","_refTextarea$current","removeEventListener","React","className","ref","defaultValue","spellCheck","event","target","onKeyDown","key","preventDefault","document","execCommand","onMouseUp","onSelect","onScroll","onBlur","onMouseDown","focus","min","max","_toConsumableArray","Array","keys","map","integer","lineNumber","style","setText","Layout","TextEditorComponent","onClick","navigator","clipboard","writeText","StaticImage","src","alt","title","loading","__imageData","Head","location","SEO","pathname"],"sourceRoot":""}