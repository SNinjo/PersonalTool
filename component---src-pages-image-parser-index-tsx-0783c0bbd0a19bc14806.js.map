{"version":3,"file":"component---src-pages-image-parser-index-tsx-0783c0bbd0a19bc14806.js","mappings":"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","sources":["webpack://SNinjo Tool/./src/components/ImageLoader/index.module.scss","webpack://SNinjo Tool/./src/components/ImageLoader/index.tsx","webpack://SNinjo Tool/./src/pages/ImageParser/index.tsx","webpack://SNinjo Tool/./src/pages/ImageParser/index.module.scss"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var copying = \"index-module--copying--063ad\";\nexport var div = \"index-module--div--cd131\";\nexport var dragging = \"index-module--dragging--09847\";\nexport var show = \"index-module--show--38579\";\nexport var transparent = \"index-module--transparent--7ad46\";","import React, { FC, useEffect, useRef, useState } from 'react';\r\n\r\nimport { copyFile, getDataUrl, getFile, isDataUrl } from '../../tools/Image';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nexport interface Image {\r\n\ttype: string,\r\n\twidth: number,\r\n\theight: number,\r\n\tdataUrl: string,\r\n\tfile: File,\r\n}\r\ntype DataProps = {\r\n\twidth?: string,\r\n\theight?: string,\r\n\r\n\tonChange?: (image: Image) => void,\r\n}\r\n\r\nconst ImageLoader: FC<DataProps> = ({ width, height, onChange }) => {\r\n\tconst refInput = useRef<HTMLInputElement>(null);\r\n\tconst refImage = useRef<HTMLImageElement>(null);\r\n\tconst [isDragging, setDraggingState] = useState(false);\r\n\r\n\r\n\tconst [isCopying, setCopyState] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tif (isCopying) {\r\n\t\t\tsetTimeout(() => setCopyState(false), 1500);\r\n\t\t}\r\n\t}, [isCopying]);\r\n\r\n\t\r\n\tconst [file, setFile] = useState<File>();\r\n\tconst [source, setSource] = useState('');\r\n\r\n\tconst readFile = async () => {\r\n\t\tif (file) {\r\n\t\t \tsetSource(await getDataUrl(file));\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\treadFile();\r\n\t}, [file]);\r\n\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`${style.div} ${isDragging? style.dragging : ''} ${isCopying? style.copying : ''}`}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t}}\r\n\t\t\ttabIndex={0}\r\n\r\n\r\n\t\t\tonDragEnter={() => setDraggingState(true)}\r\n\t\t\tonDragLeave={() => setDraggingState(false)}\r\n\t\t\tonDragOver={(event) => event.preventDefault()}\r\n\t\t\tonDrop={(event) => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tsetDraggingState(false);\r\n\t\t\t\tsetFile(event.dataTransfer.files[0]);\r\n\t\t\t}}\r\n\r\n\t\t\tonKeyDown={(event) => {\r\n\t\t\t\tif (event.ctrlKey && event.key === 'c' && file) {\r\n\t\t\t\t\tcopyFile(file);\r\n\t\t\t\t\tsetCopyState(true);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tonPaste={(event) => {\r\n\t\t\t\tconst text = event.clipboardData.getData('Text');\r\n\t\t\t\tif (text === '') {\r\n\t\t\t\t\tsetFile(event.clipboardData.files[0]);\r\n\t\t\t\t} else if (isDataUrl(text)) {\r\n\t\t\t\t\tsetFile(getFile(text));\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Failed to parse data in the clipboard...');\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<input\r\n\t\t\t\tref={refInput}\r\n\t\t\t\ttype='file'\r\n\t\t\t\taccept=\"image/*\"\r\n\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tconst fileList = event.target.files;\r\n\t\t\t\t\tif (fileList && (fileList.length !== 0)) {\r\n\t\t\t\t\t\tsetFile(fileList[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<label\r\n\t\t\t\tclassName={source? '' : style.show}\r\n\t\t\t>\r\n\t\t\t\t<span>&gt; Paste or drop image here &lt;</span>\r\n\t\t\t</label>\r\n\r\n\t\t\t<img\r\n\t\t\t\tref={refImage}\r\n\t\t\t\tclassName={`${source? style.show : ''} ${isDragging? style.transparent : ''}`}\r\n\t\t\t\tsrc={source}\r\n\r\n\t\t\t\tonLoad={() => {\r\n\t\t\t\t\tif (file && onChange) {\r\n\t\t\t\t\t\tonChange({\r\n\t\t\t\t\t\t\ttype: file.type,\r\n\t\t\t\t\t\t\twidth: refImage.current!.naturalWidth,\r\n\t\t\t\t\t\t\theight: refImage.current!.naturalHeight,\r\n\t\t\t\t\t\t\tdataUrl: source,\r\n\t\t\t\t\t\t\tfile,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName={source? style.transparent : ''}\r\n\r\n\t\t\t\tonClick={() => refInput.current!.click()}\r\n\t\t\t>\r\n\t\t\t\tUpload\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ImageLoader;","import React, { FC, useState } from 'react';\r\nimport { PageProps } from 'gatsby';\r\n\r\nimport { convertTypeOfImageFile, downloadFile } from '../../tools/Image';\r\nimport ImageLoader, { Image } from '../../components/ImageLoader';\r\nimport Layout from '../../components/Layout';\r\nimport SEO from '../../components/SEO';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst ImageParser = () => {\r\n\tconst [image, setImage] = useState<Image>();\r\n\t\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<ImageLoader\r\n\t\t\t\t\t\t\tonChange={(image: Image) => setImage(image)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t{image?\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Type</span>\r\n\t\t\t\t\t\t\t\t\t<span>{image.type}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Width</span>\r\n\t\t\t\t\t\t\t\t\t<span>{image.width}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Height</span>\r\n\t\t\t\t\t\t\t\t\t<span>{image.height}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\tvalue={image.dataUrl}\r\n\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={async () => downloadFile(await convertTypeOfImageFile(image.file, 'image/png'))}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPNG\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={async () => downloadFile(await convertTypeOfImageFile(image.file, 'image/jpeg'))}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tJPG\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</>:\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\nexport default ImageParser;\r\n\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n\t<SEO\r\n\t\ttitle='Image Parser'\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--d0b9f\";"],"names":["show","transparent","_ref","width","height","onChange","refInput","useRef","refImage","isDragging","setDraggingState","useState","isCopying","setCopyState","useEffect","setTimeout","file","setFile","source","setSource","async","getDataUrl","readFile","React","className","style","tabIndex","onDragEnter","onDragLeave","onDragOver","event","preventDefault","onDrop","dataTransfer","files","onKeyDown","ctrlKey","key","copyFile","onPaste","text","clipboardData","getData","isDataUrl","getFile","alert","ref","type","accept","fileList","target","length","src","onLoad","current","naturalWidth","naturalHeight","dataUrl","onClick","click","image","setImage","Layout","ImageLoader","value","readOnly","downloadFile","convertTypeOfImageFile","Head","location","SEO","title","pathname"],"sourceRoot":""}